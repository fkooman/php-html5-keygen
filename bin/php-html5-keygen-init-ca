#!/usr/bin/php
<?php

require_once dirname(__DIR__).'/vendor/autoload.php';

use fkooman\Ini\IniReader;
use fkooman\Cert\CertManager;
use fkooman\Cert\PdoStorage;

try {
    $config = IniReader::fromFile(dirname(__DIR__).'/config/config.ini');

    // initialize the DB
    $pdo = new PDO(
        $config->v('PdoStorage', 'dsn'),
        $config->v('PdoStorage', 'username', false),
        $config->v('PdoStorage', 'password', false)
    );

    $pdoStorage = new PdoStorage($pdo);
    $pdoStorage->initDatabase();

    // initialize the CA
    $storageDir = $config->v('Common', 'storageDir');
    $keySize = $config->v('CA', 'keySize');
    $commonName = $config->v('CA', 'commonName');

    $caDir = sprintf('%s/ca', $storageDir);
    if (!file_exists($caDir)) {
        if (false === @mkdir($caDir)) {
            throw new Exception('unable to create ca directory');
        }
    }

    $caData = CertManager::generateCertificateAuthority($keySize, $commonName);

    // write CA certificate
    if (false === @file_put_contents(sprintf('%s/ca.crt', $caDir), $caData['crt'])) {
        throw new Exception('unable to write certificate');
    }

    // write CA private key
    if (false === @file_put_contents(sprintf('%s/ca.key', $caDir), $caData['key'])) {
        throw new Exception('unable to write private key');
    }
} catch (Exception $e) {
    echo $e->getMessage().PHP_EOL;
    exit(1);
}
